name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    if: github.event_name != 'pull_request' || github.event.action != 'closed' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install PlatformIO
        run: pip install --upgrade platformio
      - name: Install tools
        run: sudo apt-get update && sudo apt-get install -y clang-tidy cppcheck gcovr
      - name: Build firmware
        run: make build
      - name: Wokwi config sanity
        run: make wokwi-sanity

  unit-tests:
    if: github.event_name != 'pull_request' || github.event.action != 'closed' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        task: [test, coverage]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install PlatformIO
        run: pip install --upgrade platformio
      - name: Install tools
        run: sudo apt-get update && sudo apt-get install -y gcovr
      - name: Run ${{ matrix.task }}
        run: make ${{ matrix.task }}

  sanity:
    if: github.event_name != 'pull_request' || github.event.action != 'closed' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        task: [check-format, lint, cpplint, tidy]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
      - name: Install tools
        run: |
          sudo apt-get update && sudo apt-get install -y cppcheck clang-format clang-tidy
          pip install --user cpplint
      - name: Run ${{ matrix.task }}
        run: make ${{ matrix.task }}

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [build, unit-tests, sanity]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install PlatformIO
        run: pip install --upgrade platformio
      - name: Build firmware
        run: make build
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          artifacts: .pio/build/esp32dev/firmware.bin
          body: Automated release for commit ${{ github.sha }}.
