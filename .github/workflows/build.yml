name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      code: ${{ steps.filter.outputs.code }}
      markdown: ${{ steps.filter.outputs.markdown }}
      makefile: ${{ steps.filter.outputs.makefile }}
      markdown_files: ${{ steps.filter.outputs.markdown_files }}
      makefile_files: ${{ steps.filter.outputs.makefile_files }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: filter
        uses: dorny/paths-filter@v2
        with:
          # NOTE: Keep this list in sync with repository structure.
          # Add new paths here when introducing additional code directories or
          # build-related files.
          filters: |
            code:
              - 'src/**'
              - 'include/**'
              - 'lib/**'
              - 'tests/**'
              - 'scripts/**'
              - 'platformio.ini'
              - 'Makefile'
              - 'diagram.json'
              - 'wokwi.toml'
            markdown:
              - '**/*.md'
            makefile:
              - 'Makefile'

  build:
    needs: changes
    if: (needs.changes.outputs.code == 'true') && (github.event_name != 'pull_request' || github.event.action != 'closed' || github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install PlatformIO
        run: pip install --upgrade platformio
      - name: Install tools
        run: sudo apt-get update && sudo apt-get install -y clang-tidy cppcheck gcovr
      - name: Build firmware
        run: make build
      - name: Wokwi config sanity
        run: make wokwi-sanity

  unit-tests:
    needs: changes
    if: (needs.changes.outputs.code == 'true') && (github.event_name != 'pull_request' || github.event.action != 'closed' || github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        task: [test, coverage]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install PlatformIO
        run: pip install --upgrade platformio
      - name: Install tools
        run: sudo apt-get update && sudo apt-get install -y gcovr
      - name: Run ${{ matrix.task }}
        run: make ${{ matrix.task }}

  sanity:
    needs: changes
    if: (needs.changes.outputs.code == 'true') && (github.event_name != 'pull_request' || github.event.action != 'closed' || github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        task: [check-format, lint, cpplint, tidy]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
      - name: Install tools
        run: |
          sudo apt-get update && sudo apt-get install -y cppcheck clang-format clang-tidy
          pip install --user cpplint
      - name: Run ${{ matrix.task }}
        run: make ${{ matrix.task }}

  markdown-lint:
    needs: changes
    if: needs.changes.outputs.markdown == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Run markdown linter
        run: |
          files="${{ needs.changes.outputs.markdown_files }}"
          if [ -n "$files" ]; then
            make markdown-lint FILES="$files"
          fi

  makefile-lint:
    needs: changes
    if: needs.changes.outputs.makefile == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Run makefile linter
        run: make makefile-lint

